@startuml
!include style.puml
autonumber
hide footbox

participant ":TestManager" as TestManager modelCOLOUR
participant ":AnswerList" as AnswerList modelCOLOUR
participant ":Deck" as Deck modelCOLOUR
participant ":TestHistory" as TestHistory modelCOLOUR
participant ":TestUi" as TestUi uiCOLOUR

activate TestManager

TestManager -> TestManager : markTest(userAnswers)
activate TestManager

loop every answer in (userAnswers)

TestManager -> TestManager : markQuestion(userAnswers, answer)
activate TestManager

TestManager -> TestUi : printQuestion()
activate TestUi
TestUi --> TestManager
deactivate TestUi

TestManager -> TestUi : printCorrectAnswer()
activate TestUi
TestUi --> TestManager
deactivate TestUi

TestManager -> TestUi : printUserAnswer()
activate TestUi
TestUi --> TestManager
deactivate TestUi

alt answer is correct
TestManager -> AnswerList : incrementUserScore()
activate AnswerList
AnswerList --> TestManager
deactivate AnswerList

TestManager -> AnswerList : getDeck()
activate AnswerList
AnswerList -> Deck : incrementUserScore()
activate Deck
Deck --> AnswerList
deactivate Deck
AnswerList --> TestManager
deactivate AnswerList

TestManager -> TestUi : printCorrectAnsMessage()
activate TestUi
TestUi --> TestManager
deactivate TestUi

else answer is wrong
TestManager -> TestUi : printIncorrectAnsMessage()
activate TestUi
TestUi --> TestManager
deactivate TestUi
end

TestManager -> AnswerList : getDeck()
activate AnswerList
AnswerList -> Deck : incrementTotalScore()
activate Deck
Deck --> AnswerList
deactivate Deck
AnswerList --> TestManager
deactivate AnswerList

deactivate TestManager
end

TestManager -> TestUi : printResult(score, totalScore)
activate TestUi
TestUi --> TestManager
deactivate TestUi


deactivate TestManager

TestManager -> TestHistory : addAnswerList(userAnswers)
activate TestHistory
TestHistory --> TestManager
deactivate TestHistory
deactivate TestManager

@enduml