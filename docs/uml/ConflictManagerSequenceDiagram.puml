@startuml

!include SequenceStyle.puml

box Command COMMAND_BOX_COLOR
participant ":AddLinkCommand" as AddLinkCommand COMMAND_COLOR
endbox

box Content CONTENT_BOX_COLOR
participant ":ConflictManager" as ConflictManager CONTENT_COLOR
participant ":ContentManager" as ContentManager CONTENT_COLOR
participant ":Link" as Link CONTENT_COLOR
endbox

box Module MODULE_BOX_COLOR
participant ":ModuleManager" as ModuleManager MODULE_COLOR
participant ":NusModule" as NusModule MODULE_COLOR
endbox

autoactivate on

activate AddLinkCommand
create ConflictManager
AddLinkCommand -> ConflictManager: ConflictManager(moduleManager, newLink)
return
AddLinkCommand -> ConflictManager: getConflictingSchedule()
  ConflictManager -> ConflictManager: getAllLinks()
    ConflictManager -> ModuleManager: getAllModules()
    return modules

    loop For each NusModule in modules

      ConflictManager -> ModuleManager: getModule(NusModule)
      return NusModule

     ConflictManager-> NusModule : getContentManager()
     return ContentManager

      ConflictManager -> ContentManager: getContents()
      return Links
    end
    return Links
    loop For each Link in Links
        opt same day && overlapping start-time to end-time
          ConflictManager -> Link :getViewDescription()
          return description
        end
    end

return conflictingSchedule
destroy ConflictManager
@enduml