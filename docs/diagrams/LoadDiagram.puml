@startuml
!include style.puml
box STORAGE_COLOR
Participant ":StorageFile" as Storage
end box

-> Storage: loadSaveFile(memberRoster : MemberRoster\n eventCatalog : EventCatalog)
activate Storage
|||
box FILE_COLOR
create ":File" as File
end box
Storage -> File : File(DEFAULT_FILE_PATH)
activate File
return saveFile
|||
Storage -> Storage : getStringsFromFile
activate Storage #orange
return encodedLines
|||
loop encodedLines
|||
    alt classType == 'm' ||\n classType=='e'
    |||
        Storage -> Storage: add
        note right: Adds member/event to the respective roster/catalog
        activate Storage #orange

        box LOGIC_COLOR
        Participant ":XYZDecoder" as XYZDecoder
        Participant ":TaskDecoder" as TaskDecoder
        end box
        Storage-> XYZDecoder: decodeXYZFromString(line)
        activate XYZDecoder
        note over XYZDecoder: Decoders for Member,\nTask and Event objects
        return decodedObject

        return
    |||
    else classType == 't'
    |||

        box DUKE_COLOR
        Participant ":EventUpdater" as EventUpdater
        Participant ":MemberUpdater" as MemberUpdater
        end box
        Storage -> TaskDecoder: decodeTaskFromString
        activate TaskDecoder
        return decodedTask

        Storage -> EventUpdater: updateEvent
        activate EventUpdater
        note over EventUpdater: Adds the decoded task to\nits event's list of tasks
        return

        Storage -> MemberUpdater: updateMemberTasks
        activate MemberUpdater
        note over MemberUpdater: Within each member in the member\nroster that contains this task, add\nthis task to their task list
        return
    |||
    end
    |||
end
return
@enduml